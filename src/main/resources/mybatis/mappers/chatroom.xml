<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="chatroom">



  <insert id="createRoom" parameterType="chatroom">
		<![CDATA[
			insert 
				into chat_room 
				values(null,#{title},#{password},#{thumbnailUrl},#{limitedUserCount},now(),#{onlyAuthorized},#{searchable},#{owner})		
        ]]>
        <selectKey keyProperty="no" order="AFTER" resultType="Long">
            select last_insert_id()
        </selectKey>
	</insert>

  <select id="getAllChatList" resultType="map">
    <![CDATA[
		select DISTINCT
      c.no, c.title, c.password, c.thumbnail_url as thumbnailUrl, c.limited_user_count as limitedUserCount, DATE_FORMAT(c.created_at , '%Y-%m-%d %H:%i:%s') as createdAt, c.only_authorized as onlyAuthorized , c.searchable, c.owner,
        (select count(no) from participant where chat_room_no = c.no) as participantCount,
        (select DATE_FORMAT(created_at , '%Y-%m-%d %H:%i:%s') from message where chat_room_no = c.no order by created_at desc limit 1) as lastMessage

    from 
      chat_room c, participant p
    where
      c.no = p.chat_room_no
    order by 
        c.created_at desc
		]]>
  </select>

  <select id="getRoomInfo" parameterType="Long" resultType="chatroom">
    <![CDATA[
      SELECT
          no, title, password, thumbnail_url as thumbnailUrl, limited_user_count as limitedUserCount, 
          created_at as createdAt, only_authorized as onlyAuthorized, searchable as searchable, owner
      FROM
          chat_room
      WHERE
          no = #{chatRoomNo }
      ]]>
  </select>

  <select id="participatingRoom" parameterType="Long" resultType="map">
    <![CDATA[
      	SELECT DISTINCT
            c.no, c.title, c.password, c.thumbnail_url as thumbnailUrl, c.limited_user_count as limitedUserCount, DATE_FORMAT(c.created_at , '%Y-%m-%d %H:%i:%s') as createdAt, c.only_authorized as onlyAuthorized , c.searchable, c.owner,
        (select count(no) from participant where chat_room_no = c.no) as participantCount,
        (select DATE_FORMAT(created_at , '%Y-%m-%d %H:%i:%s') from message where chat_room_no = c.no order by created_at desc limit 1) as lastMessage
     FROM
          chat_room c, participant p
      WHERE
      c.no = p.chat_room_no and
          c.no IN (SELECT
               chat_room_no
                FROM
                  participant
                WHERE
                  account_no = #{no})
      order by 
        c.created_at desc
    ]]>
  </select>

  <select id="keywordSearch" parameterType="String" resultType="map">
    <![CDATA[
     	SELECT DISTINCT
            c.no, c.title, c.password, c.thumbnail_url as thumbnailUrl, c.limited_user_count as limitedUserCount, DATE_FORMAT(c.created_at , '%Y-%m-%d %H:%i:%s') as createdAt, c.only_authorized as onlyAuthorized , c.searchable, c.owner,
        (select count(no) from participant where chat_room_no = c.no) as participantCount,
        (select DATE_FORMAT(created_at , '%Y-%m-%d %H:%i:%s') from message where chat_room_no = c.no order by created_at desc limit 1) as lastMessage
     FROM
          chat_room c, participant p
      WHERE
      c.no in (select
                  chat_room_no
              FROM
                  chat_room_has_tag
              where
                  tag_no = (select
                              no
                          from
                              tag
                          where 
                              tag like CONCAT('%',#{searchValue},'%'))
        OR
            c.title like CONCAT('%',#{searchValue},'%'))
    ]]>
  </select>

  <select id="getTagName" parameterType="Long" resultType="String">
    <![CDATA[
      select 
        tag
      from 
        tag 
      where no in (select 
              tag_no
            from 
              chat_room_has_tag
            where 
              chat_room_no = #{no})
    ]]>
  </select>
  <select id="vaildatePassword" parameterType="chatRoom" resultType="String">
    <![CDATA[
      select no
       from  chat_room
       where no= #{no}
       and  password = #{password}
    ]]>
  </select>
  <update id="changePassword" parameterType="chatRoom">
    <![CDATA[
      update chat_room
      set password= #{password }
      where no = #{no }
    ]]>
  </update>

  <update id="updateChatRoomInfo" parameterType="chatRoom">
    <![CDATA[
      update chat_room
      set title= #{title }, limited_user_count= #{limitedUserCount }
      , only_authorized= #{onlyAuthorized }, searchable = #{searchable} , thumbnail_url= #{thumbnailUrl }
    ]]>
    <choose>
    <when test='("").equals(password) == false'>
    <![CDATA[
      , password = #{password}
    ]]>
    </when>
    </choose>
    <![CDATA[
      where no = #{no }
    ]]>
  </update>
  
  <select id="isExistsPassword" parameterType="Long" resultType="String">
    <![CDATA[
      select 
        password
      from 
        chat_room
      where no = #{no}
    ]]>
  </select>

  <select id="checkPassword" parameterType="map" resultType="String">
    <![CDATA[
      select 
        password
      from 
        chat_room
      where no = #{no}
          and
          password = #{password}
    ]]>
  </select>
 

</mapper>